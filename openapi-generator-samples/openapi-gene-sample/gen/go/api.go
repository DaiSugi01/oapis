/*
 * Swagger Petstore
 *
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// PetsApiRouter defines the required methods for binding the api requests to a responses for the PetsApi
// The PetsApiRouter implementation should parse necessary information from the http request,
// pass the data to a PetsApiServicer to perform the required actions, then write the service results to the http response.
type PetsApiRouter interface { 
	FindPet(http.ResponseWriter, *http.Request)
	FindPetById(http.ResponseWriter, *http.Request)
	FindPetWithQueryParam(http.ResponseWriter, *http.Request)
}
// UsersApiRouter defines the required methods for binding the api requests to a responses for the UsersApi
// The UsersApiRouter implementation should parse necessary information from the http request,
// pass the data to a UsersApiServicer to perform the required actions, then write the service results to the http response.
type UsersApiRouter interface { 
	FindUsers(http.ResponseWriter, *http.Request)
}


// PetsApiServicer defines the api actions for the PetsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PetsApiServicer interface { 
	FindPet(context.Context) (ImplResponse, error)
	FindPetById(context.Context, int64) (ImplResponse, error)
	FindPetWithQueryParam(context.Context, int64) (ImplResponse, error)
}


// UsersApiServicer defines the api actions for the UsersApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersApiServicer interface { 
	FindUsers(context.Context) (ImplResponse, error)
}
